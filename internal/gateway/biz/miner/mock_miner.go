// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/superproj/zero/internal/gateway/biz/miner (interfaces: MinerBiz)

// Package miner is a generated GoMock package.
package miner

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/superproj/zero/pkg/api/gateway/v1"
	v1beta1 "github.com/superproj/zero/pkg/apis/apps/v1beta1"
)

// MockMinerBiz is a mock of MinerBiz interface.
type MockMinerBiz struct {
	ctrl     *gomock.Controller
	recorder *MockMinerBizMockRecorder
}

// MockMinerBizMockRecorder is the mock recorder for MockMinerBiz.
type MockMinerBizMockRecorder struct {
	mock *MockMinerBiz
}

// NewMockMinerBiz creates a new mock instance.
func NewMockMinerBiz(ctrl *gomock.Controller) *MockMinerBiz {
	mock := &MockMinerBiz{ctrl: ctrl}
	mock.recorder = &MockMinerBizMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMinerBiz) EXPECT() *MockMinerBizMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockMinerBiz) Create(arg0 context.Context, arg1 string, arg2 *v1beta1.Miner) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockMinerBizMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMinerBiz)(nil).Create), arg0, arg1, arg2)
}

// Delete mocks base method.
func (m *MockMinerBiz) Delete(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockMinerBizMockRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockMinerBiz)(nil).Delete), arg0, arg1, arg2)
}

// Get mocks base method.
func (m *MockMinerBiz) Get(arg0 context.Context, arg1, arg2 string) (*v1beta1.Miner, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1beta1.Miner)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMinerBizMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMinerBiz)(nil).Get), arg0, arg1, arg2)
}

// List mocks base method.
func (m *MockMinerBiz) List(arg0 context.Context, arg1 string, arg2 *v1.ListMinerRequest) (*v1.ListMinerResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.ListMinerResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMinerBizMockRecorder) List(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMinerBiz)(nil).List), arg0, arg1, arg2)
}

// Update mocks base method.
func (m *MockMinerBiz) Update(arg0 context.Context, arg1 string, arg2 *v1beta1.Miner) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMinerBizMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMinerBiz)(nil).Update), arg0, arg1, arg2)
}
